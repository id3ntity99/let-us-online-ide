plugins {
    id 'java'
    id 'war'
    id 'jacoco'
}

jacoco {
    toolVersion = '0.8.8'
}

jacocoTestReport {
    dependsOn test
    reports {
        html.enabled true
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'METHOD'
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.70
            }
        }
    }
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.2'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    implementation 'com.google.api-client:google-api-client:1.34.0'
    implementation 'org.json:json:20220320'
    implementation 'com.github.docker-java:docker-java:3.2.13'
    implementation 'com.github.docker-java:docker-java-transport-httpclient5:3.2.13'
    implementation 'org.mockito:mockito-core:4.5.1'
    implementation 'org.mockito:mockito-inline:4.5.1'

    compileOnly('javax.servlet:javax.servlet-api:4.0.1')
    compileOnly('javax.websocket:javax.websocket-api:1.1')

    testImplementation 'org.mockito:mockito-all:1.10.19'
    testImplementation 'org.jacoco:org.jacoco.build:0.8.8'
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    testLogging.showStandardStreams = true
}